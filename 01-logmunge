#!/usr/bin/env perl6

use v6;

constant NUM-LINES = 30000;

say '"Logmunge" benchmark';
srand(42);
my $time-posix = 1534447684;
my $fh = open("testfile", :w);
my @open-tx;
for ^NUM-LINES -> $i {
    my $time = DateTime.new($time-posix);
    given 7.rand.floor {
        when 1 { 
            my $id = 5000000.rand.floor;
            @open-tx.push($id);
            my $otime = DateTime.new($time-posix - 4.rand.round);
            $fh.print("[$time] [INFO] starting tx $id for incoming request, rq timestamp is $otime\n") ;
        }
        when 2 {
            if @open-tx.elems > 0 {
                my $pos = @open-tx.elems.rand.floor;
                my $id = @open-tx[$pos];
                @open-tx.splice($pos, 1); 
                $fh.print("[$time] [INFO] committing tx $id to DB\n")
            }
        }
        when 3 {
            if @open-tx.elems > 0 {
                my $pos = @open-tx.elems.rand.floor;
                my $id = @open-tx[$pos];
                @open-tx.splice($pos, 1); 
                $fh.print("[$time] [INFO] rolling back tx $id\n")
            } 
        }
        when 4 {
            $fh.print("[$time] [INFO] frobnicator in effect\n") 
        }
        default { 
            $fh.print("[$time] [DEBUG] doing some work\n") 
        }
    }
    $time-posix += 2.rand.round;
}
$fh.close();

my %starts;
my @durations;
for "testfile".IO.lines {
    if /'starting tx' \s+ (\d+) .* 'timestamp is' \s+ (\S*) $/ {
        my $tstamp = DateTime.new(~$1);
        %starts{$0} = $tstamp;
    }
    elsif /'[' (\S+) ']' .* ( 'comitting' | 'rolling back' ) \s+ 'tx' \s+ (\d+) / {
        my $tstamp = DateTime.new(~$0);
        my $start = %starts{$2};
        if defined $start {
            my $duration = $tstamp.posix - $start.posix;
            @durations.push($duration);
            %starts{~$2}:delete;
        }
        else {
            say "end for unknown tx $2";
        }
    }
}
my $pp-pos = round(@durations.elems * 99 / 100);
@durations = @durations.sort;
my $pp = @durations[$pp-pos - 1];
say "99% percentile latency: $pp";
if 43 <= $pp <= 45 {
    say "check ok";
}  
else {
    say "check failed!";
    exit(1);
}
unlink("testfile");

say "benchmark complete";
