#!/bin/bash

set -e

# without this older versions fail to build due to M#403
export PERL5LIB=.:$PERL5LIB

echo "# cloning moar $1"
git clone https://github.com/MoarVM/MoarVM.git
cd MoarVM
git checkout $1
git log --date=iso -n 1
CFLAGS=-DMP_GEN_RANDOM_MAX=2147483647 \
    perl Configure.pl --prefix=/usr 
make install -j `nproc`
cd /

echo "# cloning nqp $2"
git clone https://github.com/perl6/nqp.git
cd nqp
git checkout $2
git log --date=iso -n 1
perl Configure.pl --backends=moar --prefix=/usr
make install -j `nproc`
cd /

echo "# cloning rakudo $3"
git clone https://github.com/rakudo/rakudo.git
cd rakudo
git checkout $3
git log --date=iso -n 1
perl Configure.pl --prefix=/usr --backends=moar
make install -j `nproc` 
cd /

# not using zef at the moment 03-backend is broken anyway
# but zef is hard to install in older versions, or fails to install some modules
#echo "# getting zef"
#git clone https://github.com/ugexe/zef.git
#cd zef
#git checkout $4
## ugly hack to work around some weird problem with newer zef and older rakudo
#cp -r resources/ /
#perl6 -I. bin/zef install .
#if [ ! -f /usr/lib/perl6/site/bin/zef ]; then
#    echo "copying zef from legacy location to /usr/lib/perl6/site/bin"
#    mkdir -p /usr/lib/perl6/site/bin
#    ln -s /usr/share/perl6/site/bin/zef /usr/lib/perl6/site/bin/zef
#    echo "# ls -l /usr/share/perl6/site/bin"
#    ls -l /usr/share/perl6/site/bin
#    echo "# ls -l /usr/lib/perl6/site/bin"
#    ls -l /usr/lib/perl6/site/bin
#fi
#
#echo "# installing JSON::Tiny"
#/usr/lib/perl6/site/bin/zef install JSON::Tiny

echo "# perl 6 version"
perl6 --version

echo "# benchmark system"
uname -a
cat /proc/meminfo | head -n 3
cat /proc/cpuinfo | grep "model name" | head -n 1
echo -n "number of cores: " 
nproc

cd /p6bench

for bm in $(ls  | sort | grep -v "backend"); do
    echo "# running $bm"...
    { time ./$bm; } 2>&1
done
echo "all done!"
